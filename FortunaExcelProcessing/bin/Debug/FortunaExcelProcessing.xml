<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FortunaExcelProcessing</name>
    </assembly>
    <members>
        <member name="T:FortunaExcelProcessing.CheckCellData">
            <summary>
            This class is utilized to check cell information, process it and return it.
            Error objects are also added to the static lists for soft errors.
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.CheckCellData.CellTypeString(NPOI.SS.UserModel.ICell)">
            <summary>
            Method for processing any cells that have a string value in them.
            It also allows for conversion of numeric values. Return is always a string
            </summary>
            <param name="_cell">_cell refers to the cell passed into the method</param>
        </member>
        <member name="M:FortunaExcelProcessing.CheckCellData.CellWeirdDate(NPOI.SS.UserModel.ICell)">
            <summary>
            This method is used for dates that do not appear in a typic dd:MM:YYYY way
            Most dates within the Weekly Data reports will be formatted as 'Jan 6'
            </summary>
            <param name="_cell">_cell refers to the cell passed into the method</param>
        </member>
        <member name="M:FortunaExcelProcessing.CheckCellData.CellTypeNumeric(NPOI.SS.UserModel.ICell)">
            <summary>
            Reads in a numeric cell and returns a number.
            If -1 is returned assume that the cell is not a numeric format.
            </summary>
            <param name="_cell">_cell refers to the cell passed into the method</param>
        </member>
        <member name="M:FortunaExcelProcessing.CheckCellData.CellTypeDate(NPOI.SS.UserModel.ICell)">
            <summary>
            Method for processing typical dates that can be understood using C#'s datetime without formatting.
            </summary>
            <param name="_cell">_cell refers to the cell passed into the method</param>
        </member>
        <member name="M:FortunaExcelProcessing.CheckCellData.CellTypeUnknown(NPOI.SS.UserModel.ICell)">
            <summary>
            Currently throws an exception, in the future this method is intended to diagnose
            and return a value for a cell that the user doesn't know the value for.
            </summary>
            <param name="_cell">_cell refers to the cell passed into the method</param>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.NumToColName(System.Int32)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.ReceiveResponse(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getDate">
            <summary>
            
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getDate(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.inputDataToSheet(System.String,NPOI.SS.UserModel.ICell)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="cell"></param>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getFarmName(System.Int32)">
            <summary>
            
            </summary>
            <param name="farmId"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getFarmArea(System.Int32)">
            <summary>
            
            </summary>
            <param name="farmId"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getCows(System.Int32)">
            <summary>
            
            </summary>
            <param name="farmId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getData(System.String)" -->
        <member name="M:FortunaExcelProcessing.ConsilidatedReport.ConsolUtil.getNumberofFarms">
            <summary>
            Recieves the JSON file as a respose, then substrings expected information out of it.
            </summary>
            <remarks>
            I still feel 'stripper' is a somewhat questionable variable name.
            </remarks>
            <returns>
            Returns integer value that is parsed from a substring pulled from a JSON file.
            </returns>
        </member>
        <member name="T:FortunaExcelProcessing.ErrorHandling.Error">
            <summary>
            Instantiate one of these objects when a hard or soft error occurs
            It is reccomended to add these to the public static lists conatained in 'Error Reporter'
            </summary>
        </member>
        <member name="P:FortunaExcelProcessing.ErrorHandling.Error.Cell">
            <summary>
            The cell the error occurs in
            </summary>
        </member>
        <member name="P:FortunaExcelProcessing.ErrorHandling.Error.Description">
            <summary>
            The description for the error
            </summary>
        </member>
        <member name="P:FortunaExcelProcessing.ErrorHandling.Error.Severity">
            <summary>
            The level of severity for the error
            </summary>
        </member>
        <member name="P:FortunaExcelProcessing.ErrorHandling.Error.ErrorCode">
            <summary>
            The code assigned for the error, refer to official documentation
            </summary>
        </member>
        <member name="P:FortunaExcelProcessing.ErrorHandling.Error.ExtraInfo">
            <summary>
            For any extra information related to the error
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.ErrorHandling.Error.#ctor(System.String)">
            <summary>
            Intended for handling of hard errors, that don't pertain to single cell errors
            </summary>
            <param name="s">String for the basic error information</param>
        </member>
        <member name="M:FortunaExcelProcessing.ErrorHandling.Error.#ctor(NPOI.SS.UserModel.ICell,System.String)">
            <summary>
            Intended for handling of soft errors, soft errors require the offending cell and the description of the error
            </summary>
            <param name="c">The cell that the error occurs in</param>
            <param name="s">String for the basic error information</param>
        </member>
        <member name="T:FortunaExcelProcessing.ErrorHandling.ErrorReporter">
            <summary>
            The Error reporter is intended to take any exceptions from the GUI that occur when processing the excel documents
            Please note that exceptions must be added to the list, 
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.ErrorHandling.ErrorReporter.ResetErrors">
            <summary>
            Clear error lists
            </summary>
        </member>
        <member name="F:FortunaExcelProcessing.WeeklyProcessing.EditCommentsTable.category">
            <summary>
            
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditCommentsTable.EditTable(NPOI.SS.UserModel.ISheet)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditCommentsTable.GetComment(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
            <param name="r"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditCommentsTable.CommentsTable(System.Data.SQLite.SQLiteConnection)">
            <summary>
            
            </summary>
            <param name="dBConnection"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditCommentsTable.checkForExistingColumn(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="farmID"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditInputTable.EditTable(NPOI.SS.UserModel.ISheet)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditInputTable.SupplementsTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditPaddocksTable.EditTable(NPOI.SS.UserModel.ISheet)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditPaddocksTable.ProcessData(System.Data.SQLite.SQLiteConnection)">
            <summary>
            
            </summary>
            <param name="dbCon"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditPaddocksTable.CheckForExistingData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.dataRows">
            <summary>
            
            </summary>
        </member>
        <member name="F:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.dataLabels">
            <summary>
            
            </summary>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.EditTable(NPOI.SS.UserModel.ISheet)">
            <summary>
            
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.WeeklyDataTable(System.Data.SQLite.SQLiteConnection)">
            <summary>
            
            </summary>
            <param name="dbConn"></param>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.GetFarmID(System.String)">
            <summary>
            
            </summary>
            <param name="farmName"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.checkForExistingColumn(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="farmID"></param>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.CheckForTable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FortunaExcelProcessing.WeeklyProcessing.EditWeeklyDataTable.ExecuteDatabaseQuery(System.String)">
            <summary>
            
            </summary>
            <param name="command"></param>
        </member>
        <member name="T:FortunaExcelProcessing.WeeklySheetFactory">
            <summary>
            This is a factory class that takes in a sheet name and then determines what method to call.
            <return>
            The only return value is a selected class in the WeeklyProcessing namespace
            </return>
            </summary>
        </member>
        <member name="T:PaddockColumns">
            <summary>
            The PaddockColumns enumerator is utilized outside of the library
            </summary>
        </member>
        <member name="T:Util">
            <summary>
            The Util class is full of misc. methods that aid various other classes, think of it as a bunch of scrappy tools.
            The Util class should not be confused with the ConsolUtil class that is intended for code working with the Consolidated report.
            </summary>
        </member>
        <member name="M:Util.DForm">
            <summary>
            Returns the string used for DateTime formatting, for the database inserts
            </summary>
            <returns>
            String representing date format
            </returns>
        </member>
        <member name="P:Util.Date">
            <summary>
            
            </summary>
        </member>
        <member name="P:Util.Farmid">
            <summary>
            
            </summary>
        </member>
        <member name="M:Util.GetFarmID(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Util.CheckForTable(System.String)">
            <summary>
            
            </summary>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:Util.CheckForSheet(System.String,NPOI.SS.UserModel.IWorkbook)">
            <summary>
            
            </summary>
            <param name="sheetName"></param>
            <param name="wb"></param>
            <returns></returns>
        </member>
    </members>
</doc>
